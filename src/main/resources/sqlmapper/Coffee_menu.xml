<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.saliingv0.dao.MenuDao">
  <!--  메뉴 조회 -->
  <select id="doList" resultType="com.boot.saliingv0.vo.CoffeeMenu">
    SELECT no, coffee, kind, price,
      DATE_FORMAT(reg_day, '%Y.%m.%d') AS reg_day,
      DATE_FORMAT(mod_day, '%Y.%m.%d') AS mod_day
    FROM tbl_coffee_menu
  </select>
  <!--
    <![CDATA[  ]]>    : xml 파싱에 관여하지 않도록 처리
    <   &lt;
    >   &gt;
  -->
  <!--  검색애 의한 쿼리-->
  <select id="doSearch" resultType="com.boot.saliingv0.vo.CoffeeMenu">
    SELECT no, coffee, kind, price,
      DATE_FORMAT(reg_day, '%Y.%m.%d') AS reg_day,
      DATE_FORMAT(mod_day, '%Y.%m.%d') AS mod_day
    FROM tbl_coffee_menu
    WHERE 1=1

    AND reg_day >= DATE_FORMAT(#{strStartDate},'%Y%m%d')
    AND reg_day &lt; DATE_ADD(DATE_FORMAT(#{strEndDate},'%Y%m%d'), INTERVAL +1 DAY)
    <if test="strCoffee != 'ALL'">
      AND coffee like CONCAT(#{strCoffee},'%')
    </if>
    <if test="strKind != 'ALL'">
      AND kind = #{strKind}
    </if>
  </select>

  <!--  메뉴 조회 One row -->
  <select id="doListOne" resultType="map">
    SELECT no, coffee, kind, price,
      DATE_FORMAT(reg_day, '%Y.%m.%d') AS reg_day,
      DATE_FORMAT(mod_day, '%Y.%m.%d') AS mod_day
    FROM tbl_coffee_menu
    WHERE no = CAST(#{strNo} as INTEGER)
  </select>

  <insert id="doInsert">
    INSERT INTO tbl_coffee_menu(coffee, kind, price)
    VALUES
    (#{coffee},#{kind},CAST(#{price} as INTEGER))
  </insert>
  <delete id="doDelete">
    delete from tbl_coffee_menu where no = CAST(#{no} AS INTEGER)
  </delete>
  <update id="doUpdate">
    UPDATE tbl_coffee_menu SET
      coffee = #{coffee},
      kind = #{kind},
      price = CAST(#{price} AS INTEGER)
    where no = CAST(#{no} AS INTEGER)
  </update>

  <update id="doUpdatePrice">
    Update tbl_coffee_menu
    SET
    price = CAST(#{strPrice} AS INTEGER),
    WHERE no = CAST(#{strNo} AS INTEGER)
  </update>
<!--  <insert id="doInsertLog">-->
<!--    INSERT INTO log(coffee_no, price)-->
<!--    VALUES (#{strNo}, CAST(#{strPrice} AS INTEGER))-->
<!--  </insert>-->



  <!--  메뉴 가격 수정 One 쿼리 -->
  <insert id="doInsertLogOne">
    INSERT INTO coffee_menu_log(coffee_no, price)
    <foreach item="item" index="index" collection="chkList" separator=" UNION ALL " nullable="true">
      SELECT #{item}, CAST(#{strPrice} AS INTEGER) FROM DUAL
    </foreach>
  </insert>
  <!-- 다중 처리 가격 변경 -->
  <!--  메뉴 가격 수정 One 쿼리 -->
  <update id="doUpdatePriceOne">
    Update tbl_coffee_menu
    SET
      price = CAST(#{strPrice} AS INTEGER)
    <where>
      <foreach item="item" index="index" collection="chkList" open="no in (" separator="," close=")" nullable="true">
        #{item}
      </foreach>
    </where>
  </update>


</mapper>